




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;

namespace C2S
{
	public class Proxy:Nettention.Proud.RmiProxy
	{
public bool JoinGame(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, long timestamp)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.JoinGame;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, timestamp);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_JoinGame, Common.JoinGame);
}

public bool JoinGame(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, long timestamp)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.JoinGame;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, timestamp);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_JoinGame, Common.JoinGame);
}
public bool MoveTo(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int entityID, float px, float py, float pz)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.MoveTo;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, entityID);
		Nettention.Proud.Marshaler.Write(__msg, px);
		Nettention.Proud.Marshaler.Write(__msg, py);
		Nettention.Proud.Marshaler.Write(__msg, pz);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_MoveTo, Common.MoveTo);
}

public bool MoveTo(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int entityID, float px, float py, float pz)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.MoveTo;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, entityID);
Nettention.Proud.Marshaler.Write(__msg, px);
Nettention.Proud.Marshaler.Write(__msg, py);
Nettention.Proud.Marshaler.Write(__msg, pz);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_MoveTo, Common.MoveTo);
}
public bool CheckLatency(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, long currentTick)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.CheckLatency;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, currentTick);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_CheckLatency, Common.CheckLatency);
}

public bool CheckLatency(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, long currentTick)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.CheckLatency;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, currentTick);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_CheckLatency, Common.CheckLatency);
}
public bool GetEntityCount(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GetEntityCount;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GetEntityCount, Common.GetEntityCount);
}

public bool GetEntityCount(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GetEntityCount;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GetEntityCount, Common.GetEntityCount);
}
	
		#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_JoinGame="JoinGame";
public const string RmiName_MoveTo="MoveTo";
public const string RmiName_CheckLatency="CheckLatency";
public const string RmiName_GetEntityCount="GetEntityCount";
       
public const string RmiName_First = RmiName_JoinGame;
		#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_JoinGame="";
public const string RmiName_MoveTo="";
public const string RmiName_CheckLatency="";
public const string RmiName_GetEntityCount="";
       
public const string RmiName_First = "";
		#endif

		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}


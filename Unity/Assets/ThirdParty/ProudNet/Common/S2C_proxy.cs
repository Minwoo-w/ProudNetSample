




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;

namespace S2C
{
	public class Proxy:Nettention.Proud.RmiProxy
	{
public bool JoinClient(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int hostID, int entityID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.JoinClient;
		__msg.Write(__msgid);
		Core.MoveInfoMarshaler.Write(__msg, hostID);
		Core.MoveInfoMarshaler.Write(__msg, entityID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_JoinClient, Common.JoinClient);
}

public bool JoinClient(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int hostID, int entityID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.JoinClient;
__msg.Write(__msgid);
Core.MoveInfoMarshaler.Write(__msg, hostID);
Core.MoveInfoMarshaler.Write(__msg, entityID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_JoinClient, Common.JoinClient);
}
public bool LeaveClient(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int hostID, int entityID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.LeaveClient;
		__msg.Write(__msgid);
		Core.MoveInfoMarshaler.Write(__msg, hostID);
		Core.MoveInfoMarshaler.Write(__msg, entityID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_LeaveClient, Common.LeaveClient);
}

public bool LeaveClient(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int hostID, int entityID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.LeaveClient;
__msg.Write(__msgid);
Core.MoveInfoMarshaler.Write(__msg, hostID);
Core.MoveInfoMarshaler.Write(__msg, entityID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_LeaveClient, Common.LeaveClient);
}
public bool EntityAppear(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int entityID, bool bPublic, float px, float py, float pz)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.EntityAppear;
		__msg.Write(__msgid);
		Core.MoveInfoMarshaler.Write(__msg, entityID);
		Core.MoveInfoMarshaler.Write(__msg, bPublic);
		Core.MoveInfoMarshaler.Write(__msg, px);
		Core.MoveInfoMarshaler.Write(__msg, py);
		Core.MoveInfoMarshaler.Write(__msg, pz);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_EntityAppear, Common.EntityAppear);
}

public bool EntityAppear(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int entityID, bool bPublic, float px, float py, float pz)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.EntityAppear;
__msg.Write(__msgid);
Core.MoveInfoMarshaler.Write(__msg, entityID);
Core.MoveInfoMarshaler.Write(__msg, bPublic);
Core.MoveInfoMarshaler.Write(__msg, px);
Core.MoveInfoMarshaler.Write(__msg, py);
Core.MoveInfoMarshaler.Write(__msg, pz);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_EntityAppear, Common.EntityAppear);
}
public bool EntityDisappear(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int entityID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.EntityDisappear;
		__msg.Write(__msgid);
		Core.MoveInfoMarshaler.Write(__msg, entityID);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_EntityDisappear, Common.EntityDisappear);
}

public bool EntityDisappear(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int entityID)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.EntityDisappear;
__msg.Write(__msgid);
Core.MoveInfoMarshaler.Write(__msg, entityID);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_EntityDisappear, Common.EntityDisappear);
}
public bool MoveTo(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, System.Collections.Generic.List<Core.MoveInfo> infos)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.MoveTo;
		__msg.Write(__msgid);
		Core.MoveInfoMarshaler.Write(__msg, infos);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_MoveTo, Common.MoveTo);
}

public bool MoveTo(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, System.Collections.Generic.List<Core.MoveInfo> infos)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.MoveTo;
__msg.Write(__msgid);
Core.MoveInfoMarshaler.Write(__msg, infos);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_MoveTo, Common.MoveTo);
}
public bool CheckLatency(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, long prevTick)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.CheckLatency;
		__msg.Write(__msgid);
		Core.MoveInfoMarshaler.Write(__msg, prevTick);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_CheckLatency, Common.CheckLatency);
}

public bool CheckLatency(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, long prevTick)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.CheckLatency;
__msg.Write(__msgid);
Core.MoveInfoMarshaler.Write(__msg, prevTick);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_CheckLatency, Common.CheckLatency);
}
public bool EntityCount(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int amount)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.EntityCount;
		__msg.Write(__msgid);
		Core.MoveInfoMarshaler.Write(__msg, amount);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_EntityCount, Common.EntityCount);
}

public bool EntityCount(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int amount)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.EntityCount;
__msg.Write(__msgid);
Core.MoveInfoMarshaler.Write(__msg, amount);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_EntityCount, Common.EntityCount);
}
	
		#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_JoinClient="JoinClient";
public const string RmiName_LeaveClient="LeaveClient";
public const string RmiName_EntityAppear="EntityAppear";
public const string RmiName_EntityDisappear="EntityDisappear";
public const string RmiName_MoveTo="MoveTo";
public const string RmiName_CheckLatency="CheckLatency";
public const string RmiName_EntityCount="EntityCount";
       
public const string RmiName_First = RmiName_JoinClient;
		#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_JoinClient="";
public const string RmiName_LeaveClient="";
public const string RmiName_EntityAppear="";
public const string RmiName_EntityDisappear="";
public const string RmiName_MoveTo="";
public const string RmiName_CheckLatency="";
public const string RmiName_EntityCount="";
       
public const string RmiName_First = "";
		#endif

		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}

